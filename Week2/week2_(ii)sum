question:-Given a sorted array of positive integers, design an algorithm and implement it using a program to find three indices i, j, k such that arr[i] + arr[j] = arr[k].
ans :- There are two methods  to do this question
method1:-brute froce method
#include<iostream>
using namespace std;
void sum(int arr[],int n)
{ bool found=false;
    for(int i=0;i<n-2;i++)
    {
        for(int j=i+1;j<n-1;j++)
        {
            for(int k=j+1;k<n;k++)
            {
                if(arr[i]+arr[j]==arr[k]||arr[j]+arr[k]==arr[i]||arr[i]+arr[k]==arr[j])
                {
                    cout<<"tripletes indexes are"<<i<<","<<j<<","<<k<<endl;
                    found=true;
                }
            }
        }
    }
    if(found==false)
    {
        cout<<"no sequence present";
    }
}
int main()
{
    int arr[]={1,2,3,4,5,6,7,8,9};
    int n=sizeof(arr)/sizeof(arr[0]);
    sum(arr,n);
}
methode 2:- use of 2 sum approach
#include<iostream>
using namespace std;
void sum(int arr[],int n)
{
    int j;
    int k;
   bool found=false;
    for(int i=n-1;i>=2;i--)
    {
        j=0;
        k=i-1;
        while(j<k){
                if(arr[j]+arr[k]==arr[i])
                {
                  cout<<"tripletes indexes are"<<i<<","<<j<<","<<k<<endl;
                  j++;
                  k--;
                  found=true;
                }else if(arr[j]+arr[k]<arr[i])
                {
                   j++;
                }
                else{
                    k--;
                }
            }
        }
        if(found==false)
        {
            cout<<"no sequence found";
        }
    }
    
int main()
{
    int arr[]={0,1,2,3,4,5,6,7,8,9};
    int n=sizeof(arr)/sizeof(arr[0]);
    sum(arr,n);
}
